#!groovy

properties([
  // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
  pipelineTriggers([cron('H 05 * * *')]),
  parameters([
          string(name: 'ENVIRONMENT', defaultValue: 'aat', description: 'Environment to test'),
          string(name: 'URL_TO_TEST', defaultValue: 'https://am-lib-test-aat-staging.service.core-compute-aat.internal', description: 'The URL you want to run these tests against')
  ])
])

@Library("Infrastructure")

def type = "java"
def product = "am"
def component = "lib-test"

withNightlyPipeline(type, product, component) {
    env.TEST_URL = params.URL_TO_TEST

//    enableMutationTest()
    enablePerformanceTest()
//    enableSlackNotifications('#am-master-builds')

    before('PerformanceTest') {
        sh """
            env
        """
        sh """
            ls
        """
        sh """
            ls src/gatling
        """
        sh """
            ls src/gatling/bodies
        """
        withDocker('hmcts/moj-gatling-image:2.3.1-1.0', '--network=host -v $WORKSPACE/src/gatling/conf:/etc/gatling/conf') {
            sh "pwd"
        }
        withDocker('hmcts/moj-gatling-image:2.3.1-1.0', '--network=host -v $WORKSPACE/src/gatling/conf:/etc/gatling/conf') {
            sh "env"
        }
        withDocker('hmcts/moj-gatling-image:2.3.1-1.0', '--network=host -v $WORKSPACE/src/gatling/conf:/etc/gatling/conf') {
            sh "ls /opt/jenkins/workspace/AM_am-lib_performance-test-debug"
        }
        withDocker('hmcts/moj-gatling-image:2.3.1-1.0', '--network=host -v $WORKSPACE/src/gatling/conf:/etc/gatling/conf') {
            sh "ls /opt/jenkins/workspace/AM_am-lib_performance-test-debug/src/gatling/bodies"
        }
    }
}
