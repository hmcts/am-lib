plugins {
    id 'java-library'
    id 'maven-publish'
    id 'checkstyle'
    id 'pmd'
    id 'jacoco'
    id 'org.sonarqube' version '2.7'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'com.github.johnrengelman.shadow' version '4.0.4'
    id "io.freefair.aspectj.post-compile-weaving" version "3.1.4"
}

group 'uk.gov.hmcts.reform'
version "${version}"

configurations {
    testOutput.extendsFrom(testCompile)
}

test {
    useJUnitPlatform()
}

checkstyle {
    toolVersion = '8.18'
    maxWarnings = 0
    configDir = new File("config/checkstyle")
}

pmd {
    toolVersion = "6.12.0"
    sourceSets = [sourceSets.main, sourceSets.test]
    reportsDir = file("$buildDir/reports/pmd/$project.name")
    ruleSetFiles = files("$projectDir/config/pmd/ruleset.xml")
    ruleSets = []
}

sonarqube {
    properties {
        property "sonar.projectName", "Reform :: am-lib"
        property "sonar.projectKey", "uk.gov.hmcts.reform:am-lib"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.jacoco.itReportPath", "${project.buildDir}/jacoco/integration.exec"
        property "sonar.coverage.exclusions", "**/models/**,**/repositories/mappers/**,**/AspectsSuite.java"
    }
}

project.tasks['sonarqube'].dependsOn test

sourceCompatibility = 1.8

compileJava {
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.compilerArgs << '-parameters'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
      url  "https://dl.bintray.com/hmcts/hmcts-maven"
    }
}

dependencies {
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.6'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.6'

    compile group: 'org.jdbi', name: 'jdbi3-core', version: '3.6.0'
    compile group: 'org.jdbi', name: 'jdbi3-sqlobject', version: '3.7.0'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.5'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.8'
    compile group: 'org.hibernate.validator', name: 'hibernate-validator', version: '6.0.16.Final'
    compile group: 'org.aspectj', name: 'aspectjrt', version: '1.9.2'

    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.6'
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.6'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.4.1'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.26.0'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.12.2'
    testCompile group: 'org.flywaydb', name: 'flyway-core', version: '5.2.4'
    testCompile group: 'org.testcontainers', name: 'postgresql', version: '1.11.1'
    testCompile group: 'com.google.guava', name: 'guava', version: '27.1-jre'
    testCompile group: 'uk.gov.hmcts.reform', name: 'java-logging', version: '5.0.1'
    testCompile group: 'uk.gov.hmcts.reform', name: 'java-logging-appinsights', version: '5.0.1'
}

task codeCoverageReport(type: JacocoReport, dependsOn: test) {

    // Gather execution data from all subprojects
    // (change this if you e.g. want to calculate unit test/integration test coverage separately)
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    reports {
        csv.enabled = false
        html.enabled = true
        html.destination = file("${buildDir}/reports/jacoco/html")
        xml.enabled = true
        xml.destination = file("${buildDir}/reports/jacoco/jacocoTestReport.xml")
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

task jarTest(type: Jar, dependsOn: testClasses) {
    from sourceSets.test.output
}

shadowJar {
    from('src/main/java') {
        include '**/*.sql'
    }
    def packages = [
        'org.aspectj',
        'org.hibernate.validator',
        'org.hibernate.validator',
        'javax.validation',
        'org.jboss.logging',
        'com.fasterxml.classmate'
    ]
    packages.each({pkg ->
      relocate pkg, 'shaded.' + pkg
    })
    archiveClassifier = 'all'
}

artifacts {
    archives shadowJar
    archives javadocJar
    testOutput jarTest
}

publishing {
    publications {
        Main(MavenPublication) {
            from components.java
            artifact shadowJar
            artifact javadocJar
            groupId project.group
            artifactId 'am-lib'
            version project.version
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['Main']
    publish = true
    pkg {
        repo = 'hmcts-maven'
        name = 'am-lib'
        userOrg = 'hmcts'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/hmcts/am-lib'
        version {
            name = project.version
        }
    }
}
